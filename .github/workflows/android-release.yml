name: Android Release Build

on:
  push:
    tags:
      - "*"

env:
  NODE_VERSION: "18"
  JAVA_VERSION: "17"
  KEYSTORE_FILE: "release.jks"

jobs:
  build:
    name: Build and Release Android APKs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Cache Android build artifacts
        uses: actions/cache@v4
        with:
          path: |
            android/app/build
            android/build
          key: ${{ runner.os }}-android-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-android-build-

      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo $KEYSTORE_BASE64 | base64 -d > android/app/${{ env.KEYSTORE_FILE }}

      - name: Generate keystore.properties
        run: |
          cat <<EOF > android/keystore.properties
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=${{ env.KEYSTORE_FILE }}
          EOF

      - name: Build Release APKs
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
          body: |
            # ðŸš€ Alternate ${{ steps.tag.outputs.tag }} â€“ Feature & Improvement Release

            ## âœ¨ What's New in ${{ steps.tag.outputs.tag }}

            - Added support for adding contact photos
            - Caller ID popup now appears on lock screen
            - Minor bug fixes and stability improvements

            ## ðŸ“¦ Download Options

            Choose the APK that matches your device architecture:

            - **ARM64 (64-bit)** â€“ Recommended for most modern devices  
            - **ARM (32-bit)** â€“ For older Android devices  
            - **x86 (64-bit)** â€“ For Intel-based Android devices/emulators  
            - **x86 (32-bit)** â€“ For older Intel-based devices  

            ## ðŸ”§ Installation

            1. Download the appropriate APK for your device
            2. Enable "Install from unknown sources" in your Android settings
            3. Install the APK file

            ## ðŸ“‹ System Requirements

            - Android 7.0 (API level 24) or higher
            - Permissions: Contacts, Phone

      - name: Upload arm64-v8a APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/release/app-arm64-v8a-release.apk
          asset_name: alternate-arm64-v8a-${{ steps.tag.outputs.tag }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload armeabi-v7a APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/release/app-armeabi-v7a-release.apk
          asset_name: alternate-armeabi-v7a-${{ steps.tag.outputs.tag }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload x86_64 APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/release/app-x86_64-release.apk
          asset_name: alternate-x86_64-${{ steps.tag.outputs.tag }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload x86 APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/release/app-x86-release.apk
          asset_name: alternate-x86-${{ steps.tag.outputs.tag }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload metadata
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/release/output-metadata.json
          asset_name: output-metadata.json
          asset_content_type: application/json
