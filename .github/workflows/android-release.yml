name: Android Release Build

on:
  push:
    tags:
      - '*'

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  KEYSTORE_FILE: 'release.jks'

jobs:
  build:
    name: Build and Release Android APKs
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Install dependencies
      run: npm ci

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Make gradlew executable
      run: chmod +x android/gradlew

    - name: Decode Keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      run: |
        echo $KEYSTORE_BASE64 | base64 -d > android/app/${{ env.KEYSTORE_FILE }}

    - name: Generate keystore.properties
      run: |
        cat <<EOF > android/keystore.properties
        storePassword=${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword=${{ secrets.KEY_PASSWORD }}
        keyAlias=${{ secrets.KEY_ALIAS }}
        storeFile=${{ env.KEYSTORE_FILE }}
        EOF

    - name: Build Release APKs
      run: |
        cd android
        ./gradlew assembleRelease

    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        release_name: Release ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: false
        body: |
          ## What's Changed
          - Android release build for version ${{ steps.tag.outputs.tag }}
          
          ## APK Downloads
          This release includes split APKs for different architectures:
          - **arm64-v8a**: For modern 64-bit ARM devices (recommended for most users)
          - **armeabi-v7a**: For older 32-bit ARM devices
          - **x86_64**: For 64-bit x86 devices (emulators, some tablets)
          - **x86**: For 32-bit x86 devices (older emulators)
          
          Download the appropriate APK for your device architecture.

    - name: Upload arm64-v8a APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/release/app-arm64-v8a-release.apk
        asset_name: alternate-arm64-v8a-${{ steps.tag.outputs.tag }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload armeabi-v7a APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/release/app-armeabi-v7a-release.apk
        asset_name: alternate-armeabi-v7a-${{ steps.tag.outputs.tag }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload x86_64 APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/release/app-x86_64-release.apk
        asset_name: alternate-x86_64-${{ steps.tag.outputs.tag }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload x86 APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/release/app-x86-release.apk
        asset_name: alternate-x86-${{ steps.tag.outputs.tag }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload metadata
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/release/output-metadata.json
        asset_name: output-metadata.json
        asset_content_type: application/json
